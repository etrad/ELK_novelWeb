<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sif.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.sif.pojo.User">
    <id column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="upassword" jdbcType="VARCHAR" property="upassword" />
    <result column="umail" jdbcType="VARCHAR" property="umail" />
    <result column="ustate" jdbcType="INTEGER" property="ustate" />
    <result column="ucode" jdbcType="VARCHAR" property="ucode" />
    <result column="uisauthor" jdbcType="INTEGER" property="uisauthor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, username, upassword, umail, ustate, ucode, uisauthor
  </sql>

  <!--/*根据用户名查询用户*/-->
  <!--User selectUserByUsername(String username);-->
  <select id="selectUserByUsername" parameterType="java.lang.String" resultType="com.sif.pojo.User">
    select
    <include refid="Base_Column_List" />
    FROM  user
    WHERE username = #{username,jdbcType=VARCHAR}
  </select>

  <!--/*激活作者*/-->
  <!--void updateUisAuthorByUid(String uid);-->
  <update id="updateUisAuthorByUid" parameterType="java.lang.String">
    update user
    set uisauthor = 1
    where uid = #{uid,jdbcType=VARCHAR}
  </update>

  <!--/*查看是不是作者*/-->
  <!--Integer selectUisAuthorByUid(String uid);-->
  <select id="selectUisAuthorByUid" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT uisauthor FROM user WHERE uid = #{uid,jdbcType=VARCHAR}
  </select>


  <!--激活用户-->
  <!--    void updateUstateByUid(String uid);-->
  <update id="updateUstateByUid" parameterType="java.lang.String">
    update user
    set ustate = 1
    where uid = #{uid,jdbcType=VARCHAR}
  </update>

  <!--/*匹配激活码*/-->
  <!--User selectUserByCode(String code);-->
  <select id="selectUserByCode" parameterType="java.lang.String" resultType="com.sif.pojo.User">
    select
    <include refid="Base_Column_List" />
    FROM  user
    WHERE ucode = #{ucode,jdbcType=VARCHAR}
  </select>
  <!--查询by邮箱-->
  <select id="selectUserByuUmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
      FROM  user
      WHERE umail = #{umail,jdbcType=VARCHAR}
  </select>
  <!--账号密码查询-->
  <select id="selectUserByIntro" parameterType="com.sif.pojo.User" resultType="com.sif.pojo.User">
    SELECT
    <include refid="Base_Column_List" />
    from user where username=#{username,jdbcType=VARCHAR} and upassword=#{upassword,jdbcType=VARCHAR}
  </select>

  <select id="selectByExample" parameterType="com.sif.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by #{orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sif.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sif.pojo.User">
    insert into user (uid, username, upassword, 
      umail, ustate, ucode, 
      uisauthor)
    values (#{uid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{umail,jdbcType=VARCHAR}, #{ustate,jdbcType=INTEGER}, #{ucode,jdbcType=VARCHAR}, 
      #{uisauthor,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sif.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="upassword != null">
        upassword,
      </if>
      <if test="umail != null">
        umail,
      </if>
      <if test="ustate != null">
        ustate,
      </if>
      <if test="ucode != null">
        ucode,
      </if>
      <if test="uisauthor != null">
        uisauthor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null">
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="umail != null">
        #{umail,jdbcType=VARCHAR},
      </if>
      <if test="ustate != null">
        #{ustate,jdbcType=INTEGER},
      </if>
      <if test="ucode != null">
        #{ucode,jdbcType=VARCHAR},
      </if>
      <if test="uisauthor != null">
        #{uisauthor,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sif.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null">
        upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.umail != null">
        umail = #{record.umail,jdbcType=VARCHAR},
      </if>
      <if test="record.ustate != null">
        ustate = #{record.ustate,jdbcType=INTEGER},
      </if>
      <if test="record.ucode != null">
        ucode = #{record.ucode,jdbcType=VARCHAR},
      </if>
      <if test="record.uisauthor != null">
        uisauthor = #{record.uisauthor,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set uid = #{record.uid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      upassword = #{record.upassword,jdbcType=VARCHAR},
      umail = #{record.umail,jdbcType=VARCHAR},
      ustate = #{record.ustate,jdbcType=INTEGER},
      ucode = #{record.ucode,jdbcType=VARCHAR},
      uisauthor = #{record.uisauthor,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sif.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null">
        upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="umail != null">
        umail = #{umail,jdbcType=VARCHAR},
      </if>
      <if test="ustate != null">
        ustate = #{ustate,jdbcType=INTEGER},
      </if>
      <if test="ucode != null">
        ucode = #{ucode,jdbcType=VARCHAR},
      </if>
      <if test="uisauthor != null">
        uisauthor = #{uisauthor,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sif.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      umail = #{umail,jdbcType=VARCHAR},
      ustate = #{ustate,jdbcType=INTEGER},
      ucode = #{ucode,jdbcType=VARCHAR},
      uisauthor = #{uisauthor,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
</mapper>